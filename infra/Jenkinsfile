pipeline {
    agent any
    environment {
        DOCKER_CREDENTIALS_ID = 'dockerhub-credentials'
        AWS_CREDENTIALS_ID = 'aws-credentials'
        KUBECONFIG_CREDENTIALS_ID = 'kubeconfig'
        DOCKER_REGISTRY = 'your-docker-registry'
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build and Push Docker Images') {
            parallel {
                stage('Build and Push Polybot') {
                    steps {
                        script {
                            docker.withRegistry('https://index.docker.io/v1/', "${DOCKER_CREDENTIALS_ID}") {
                                def polybotImage = docker.build("${DOCKER_REGISTRY}/polybot:latest", 'polybot/')
                                polybotImage.push()
                            }
                        }
                    }
                }
                stage('Build and Push YOLO5') {
                    steps {
                        script {
                            docker.withRegistry('https://index.docker.io/v1/', "${DOCKER_CREDENTIALS_ID}") {
                                def yolo5Image = docker.build("${DOCKER_REGISTRY}/yolo5:latest", 'yolo5/')
                                yolo5Image.push()
                            }
                        }
                    }
                }
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                script {
                    withCredentials([file(credentialsId: "${KUBECONFIG_CREDENTIALS_ID}", variable: 'KUBECONFIG')]) {
                        sh 'kubectl apply -f infra/k8s/'
                    }
                }
            }
        }
    }
}
